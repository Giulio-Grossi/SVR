setwd("/home/alessandra/Dropbox/Documents/ResearchActivities/GrossiPapadogeorgouMattei/Rcode/ShenDingSeknonYu")
rm(list=ls())
library(mvtnorm)
source("var.R")

germany.pre <- read.csv("C:/Users/giuli/Downloads/pre_outcomes.csv")
dim(germany.pre)
head(germany.pre)

germany.post <- read.csv("C:/Users/giuli/Downloads/post_outcomes.csv")
dim(germany.post)
head(germany.post)

treated.unit <- 'West Germany'

# unit indices 
units.i =  germany.pre[,1]
donors = units.i[units.i!=treated.unit]

# time indices   
pre_cols  = germany.pre[,-1]
post_cols = germany.post[,-1]
N0 <- length(donors)
T0 <- ncol(pre_cols)

# get observed data   
Y0_obs  = as.matrix(germany.pre[germany.pre$unit!=treated.unit, -1])
y_n_obs = as.numeric(germany.pre[germany.post$unit==treated.unit, -1])
y_t_obs = germany.post[germany.post$unit!=treated.unit, -1]
y_t_obs <- y_t_obs[,1] #only 1990

alpha <- pseudo.inv(Y0_obs)%*%y_t_obs #HR using the pseudo inverse of Y0 = U %*% S^{-1} V
  #lm(y_t_obs~Y0_obs-1)$coef   #HR
beta <- pseudo.inv(t(Y0_obs))%*%y_n_obs  
## same as  lm(y_n_obs~t(Y0_obs)-1)$coef  because T0>N0


y_n_obs%*%alpha 
y_t_obs%*%beta
pred <- y_t_obs%*%beta
pred


# take low rank approximation of Y0
svd.y0.obs <- svd(Y0_obs)
r <- rankMatrix(Y0_obs)[1]
r

U <- svd.y0.obs$u
V <- svd.y0.obs$v
S <- diag(svd.y0.obs$d)

Hu <- U[, 1:r]%*%t(U[, 1:r])
Hu_perp <- diag(1,N0)-Hu
Hv <- V[, 1:r]%*% t(V[, 1:r]) 
Hv_perp <- diag(1,T0)-Hv

# uncertainty estimation via homoskedastic-based confidence intervals
v.homo <- var_homo(y_n_obs, y_t_obs, Y0_obs, alpha, beta, Hu_perp, Hv_perp)
var.hz <- v.homo$v.hz
var.vt <- v.homo$v.vt
var.dr = var.hz + var.vt - v.homo$trA 
c(var.hz, var.vt, var.dr)



###FOR THE SIMULATION STUDY
###
# Calibrate to case study data 
###

# take low rank approximation of Y0
svd.y0.obs <- svd(Y0_obs)
r <- min(which(cumsum(svd.y0.obs$d)/sum(svd.y0.obs$d)>=0.999)) # retain 99.9% of spectral energy 
r

U <- svd.y0.obs$u
V <- svd.y0.obs$v
S <- diag(svd.y0.obs$d)

Y0 <- U[, 1:r] %*% S[1:r, 1:r] %*% t(V[, 1:r])
Hu <- U[, 1:r]%*%t(U[, 1:r])
Hu_perp <- diag(1,N0)-Hu
Hv <- V[, 1:r]%*% t(V[, 1:r]) 
Hv_perp <- diag(1,T0)-Hv

# compute underlying responses 
y_n = t(Y0) %*%  beta 
y_t = Y0 %*% alpha 


sigma2.t <- sum({Hu_perp %*% y_t_obs}^2)/(N0-r)
Sigma.t <- diag(sigma2.t, N0)

sigma2.n <- sum({Hv_perp %*% y_n_obs}^2)/(T0-r)
Sigma.n <- diag(sigma2.n, T0)



# sample new data 
set.seed(2000)
y_n_iter = as.numeric(rmvnorm(1, mean=y_n, sigma=Sigma.n))
y_t_iter = as.numeric(rmvnorm(1, mean=y_t, sigma=Sigma.t))

# define estimands 
mu_hz = y_n_iter %*% (Hv%*%alpha)
mu_vt = y_t_iter %*% (Hu%*%beta) 
mu_dr = t(alpha) %*% t(Y0)%*% beta
  
# point estimation 
library(Matrix)
r0 <- rankMatrix(Y0)[1]
svd.y0 <- svd(Y0)
U0 <- svd.y0$u[,1:r0]
V0 <- svd.y0$v[,1:r0]
S0 <- diag(svd.y0$d[1:r0])

alpha.hat <- (V0 %*% solve(S0) %*% t(U0))%*%y_t_iter 
beta.hat <- (U0 %*% solve(S0) %*% t(V0))%*%y_n_iter
#pred = y_n_iter%*%alpha.hat = y_t_iter%*%beta.hat
y_n_iter%*%alpha.hat 
y_t_iter%*%beta.hat
pred <- y_t_iter%*%beta.hat



# uncertainty estimation via homoskedastic-based confidence intervals
v.homo <- var_homo(y_n_iter, y_t_iter, Y0, alpha.hat, beta.hat, Hu_perp, Hv_perp)
var.hz <- v.homo$v.hz
var.vt <- v.homo$v.vt
var.dr = var.hz + var.vt - v.homo$trA 
c(var.hz, var.vt, var.dr)


v.pred <- compute_var(y_n_iter, y_t_iter, Y0, alpha.hat, beta.hat, Hu_perp, Hv_perp, 
                      v_alg='HRK')
var.hz <- v.pred$v.hz
var.vt <- v.pred$v.vt
var.dr = var.hz + var.vt - v.pred$trA 
c(var.hz, var.vt, var.dr)

 

pred
a<- 0.05
pred - qnorm(1-a/2)*sqrt(var.vt)
pred + qnorm(1-a/2)*sqrt(var.vt)

